///////////////////////////////////////////////////////////////////////////////
/// @file       CircularBuffer.h
/// @copyright  Copyright (c) Philtronix ltd - All rights Reserved
///             Unauthorised copying of this file, via any medium is strictly
///             prohibited.
///
/// @brief      Header file for CircularBuffer.c
///////////////////////////////////////////////////////////////////////////////

#ifndef CIRCULARBUFFER_H_
#define CIRCULARBUFFER_H_

///////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////
#include <stdlib.h>
#include <stdbool.h>
#include <stdint.h>

///////////////////////////////////////////////////////////////////////////////
// Defines
///////////////////////////////////////////////////////////////////////////////
#define TX_BUFFER_SIZE	2048
#define RX_BUFFER_SIZE	2048

///////////////////////////////////////////////////////////////////////////////
// Type definitions
///////////////////////////////////////////////////////////////////////////////
typedef struct
{
    uint32_t writeIndex;
    uint32_t readIndex;
    uint32_t maxItems;
    uint8_t * items;
} CircularBuffer_t;

///////////////////////////////////////////////////////////////////////////////
// Public Function declarations
///////////////////////////////////////////////////////////////////////////////
bool CircularBuffer_Init(CircularBuffer_t* buffer, uint8_t* data, uint32_t size);
void CircularBuffer_DeInit(CircularBuffer_t* buffer);
bool CircularBuffer_WriteByte(CircularBuffer_t* buffer, uint8_t b);
bool CircularBuffer_ReadByte(CircularBuffer_t* buffer, uint8_t* b);
uint32_t CircularBuffer_StoredItems(CircularBuffer_t* buffer);

#endif // CIRCULARBUFFER_H_
